set nocompatible

"""""""""""""""""""""""""""""
"""" vim-plug 插件管理器
"""""""""""""""""""""""""""""
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif


"""""""""""""""""""""""""""""
"""" 开始处理插件
"""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')


" ---------------------------
" 基础增强插件
" ---------------------------
Plug 'tweekmonster/startuptime.vim'
Plug 'ervandew/supertab'

" ---------------------------
" 目录树 
" ---------------------------
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }

" 允许的最大尺寸, 解决和bufExplore冲突的问题
let g:NERDTreeWinSize=35
" 过滤文件
let NERDTreeIgnore=['.pyc$']
autocmd bufenter * if(winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" ---------------------------
" 一个比较不错的主题
" ---------------------------
Plug 'jnurmine/Zenburn'

" ---------------------------
" go插件
" ---------------------------
Plug 'fatih/vim-go'
Plug 'dgryski/vim-godef'

let g:go_code_completion_enabled = 1
let g:go_auto_type_info = 1
let g:go_updatetime = 500
let g:go_auto_sameids = 0       " => 影响速度
let g:go_fmt_comand = "gofmt"
let g:syntastic_go_checkers = ['golint', 'govet']
let g:syntastic_mode_map = {'mode': 'active', 'passive_filetypes': ['go']}
let g:go_list_type = "quickfix"

" 使用Ctrl+[跳转到定义处
" autocmd FileType go nnoremap <buffer> <C-[> :call GodefUnderCursor()<cr>
let g:godef_split=3
let g:godef_same_file_window=1


" ---------------------------
" 显示最近缓冲区的插件
" ---------------------------
Plug 'jlanzarotta/bufexplorer'

let g:bufExplorerDefaultHelp=0
" 显示最近使用最多的
let g:bufExplorerSortBy='mru'
" 在下边显示
let g:bufExplorerSplitBelow=1
" 将路径和文件名显示到一起
let g:bufExplorerSplitOutPathName=1


" ---------------------------
" 快速调节每个窗口大小
" ---------------------------
Plug 'simeji/winresizer'
let g:winresizer_start_key='<C-i>'
let g:winresizer_horiz_resize=2
let g:winresizer_vert_resize=2

" ---------------------------
" 文件模糊搜索
" ---------------------------
Plug 'ctrlpvim/ctrlp.vim'

let g:ctrlp_cmd ='CtrlP'
let g:ctrlp_custom_ignore = {
            \ 'dir': '\v(venv|env|apitest)',
            \ 'file': '\v\.(exe|so|dll)$',
            \ }
let g:ctrlp_map = '<Leader>s'


""" 插件结束
call plug#end()
"""""""""""""""""""""""""""""
"""" 插件处理结束
"""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""
"""" 编码设置
"""""""""""""""""""""""""""""
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,ucs-bom,chinese,cp930,GBK


"""""""""""""""""""""""""""""
""""" 基本设置
"""""""""""""""""""""""""""""
" 回到上次打开的位置
autocmd BufReadPost *
            \ if line("'\"") > 0 && line("'\"") <= line("$") |
            \   exe "normal! g`\"" |
            \ endif


" 语法支持
syntax on
syntax enable

" terminal size
if version >= 800
    set termwinsize=15x0
endif

" 显示行号
set number

" 命令行数
set history=4096

" 命令补全
set wildmenu

" 忽略的文件(vimgrep会使用该设置)
set wildignore+=*.0,*~,~.pyc
set wildignore+=*/venv/*

" 退格可用
set backspace=eol,start,indent 

" 以下命令可以换行
set whichwrap+=<,>,h,l

" 搜索忽略大小写
" set ignorecase

" 智能搜索 如果没有,自动上一个搜索单词
set smartcase

" 高亮搜索单词
set hlsearch

" 每插入一个字符,就高亮一个 => 匹配影响速度
" set incsearch

" 显示匹配插号 => 匹配影响速度
" set showmatch

" 匹配时间 => 匹配影响速度
" set matchtime=2

"
set lazyredraw

" 不要警告声音
set noerrorbells

" 不要警告闪屏
set novisualbell
set t_vb=
set tm=500

" 代码折叠
" set fdm=indent

" 鼠标模式
set mouse=a

" 鼠标可以在行未后一个字符
set virtualedit=onemore

" 不要备份文件
set nobackup

" 不要临时文件
set nowb

" 不要交换文件
set noswapfile

" 用空格代替tab
set expandtab   " noexpandtab

" 智能插入tab
set smarttab

" 缩进的空格数
set shiftwidth=4

" tab的空格数
set tabstop=4

" 对于长行，自动断行
set linebreak

" 自动使用当前行的缩进为下行缩进
set autoindent

" 自动缩进
set smartindent

" 一直显示状态栏
set laststatus=2

" 命令行高度
set cmdheight=1

" 共享粘贴板
" set clipboard=unnamedplus,unnamed

" 当文件修改时, 自动载入
set autoread

" viminfo保存vim状态的记录文件
" <20 每个寄存器最多保存100行
" '10 保存最近50个文件的标记
" /10 保存搜索历史条数
" :20 保存最近20个命令
" h 载入viminfo时,关闭hlsearch高亮
" s10 最多保存10个寄存器
set viminfo=<20,'10,/10,:20,h,s10


"""""""""""""""""""""""""""""
"""" 外观相关设置
"""""""""""""""""""""""""""""
set t_Co=256
highlight clear CursorLineNr
highlight clear LineNr
highlight clear SignColumn
" 背景颜色无法刷新的情况
if &term =~ '256color'
  set t_ut=
endif

" 主题设置与高行当前行与列
" color zenburn
set cursorline
" set cursorcolumn

" 自定义颜色 插件匹配高亮影响速度(配置深色主题使用) 
hi Comment          guifg=#7f9f7f   ctermfg=108
hi CursorColumn     guibg=#121212   ctermbg=233     cterm=none
hi CursorLine       guibg=#121212   gui=bold        ctermbg=233     cterm=bold
hi CursorLineNr     guifg=#f2f3bb   guibg=#161616   ctermfg=229     ctermbg=233     cterm=none
hi StatusLine       guifg=#313633   guibg=#ccdc90   ctermfg=236     ctermbg=186
hi Search           guifg=#ffffe0   guibg=#284f28   ctermfg=230     ctermbg=22
hi LineNr           guifg=#5d6262   guibg=#353535   ctermfg=240     ctermbg=236
hi Visual           guifg=#000000   guibg=#71d3b4   gui=none        ctermfg=16  ctermbg=79  cterm=bold
hi VisualNOS        guifg=#333333   guibg=#f18c96   gui=bold,underline  ctermfg=236     ctermbg=210     cterm=bold
hi Directory        guifg=#9fafaf   gui=bold        ctermfg=109 cterm=bold
hi DiffAdd          guifg=#709080   guibg=#313c36   gui=bold    ctermfg=66  ctermbg=237 cterm=bold
hi DiffChange       guibg=#333333   ctermbg=23
hi DiffDelete       guifg=#333333   guibg=#464646   ctermfg=236     ctermbg=238
hi DiffText         guifg=#ecbcbc   guibg=#41363c   gui=bold        ctermfg=217 ctermbg=237 cterm=bold


" ---------------
" tab显示设置
" ---------------
" Rename tabs to show tab# and # of viewports 
if exists("+showtabline") 
    function! MyTabLine() 
        let s = '' 
        let wn = '' 
        let t = tabpagenr() 
        let i = 1 
        while i <= tabpagenr('$') 
            let buflist = tabpagebuflist(i) 
            let winnr = tabpagewinnr(i) 
            let s .= '%' . i . 'T' 
            let s .= (i == t ? '%1*' : '%2*') 
            let s .= ' ' 
            let wn = tabpagewinnr(i,'$') 

            let s .= (i== t ? '%#TabNumSel#' : '%#TabNum#') 
            let s .= i 
            if tabpagewinnr(i,'$') > 1 
                let s .= '.' 
                let s .= (i== t ? '%#TabWinNumSel#' : '%#TabWinNum#') 
                let s .= (tabpagewinnr(i,'$') > 1 ? wn : '') 
            end 

            let s .= ' %*' 
            let s .= (i == t ? '%#TabLineSel#' : '%#TabLine#') 
            let bufnr = buflist[winnr - 1] 
            let file = bufname(bufnr) 
            let buftype = getbufvar(bufnr, 'buftype') 
            if buftype == 'nofile' 
                if file =~ '\/.' 
                    let file = substitute(file, '.*\/\ze.', '', '') 
                endif 
            else 
                let file = fnamemodify(file, ':p:t') 
            endif 
            if file == '' 
                let file = '[No Name]' 
            endif 
            let s .= file 
            let s .= (i == t ? '%m' : '') 
            let i = i + 1 
        endwhile 
        let s .= '%T%#TabLineFill#%=' 
        return s 
    endfunction 
endif 

function MyTabLabel(n)
    let buflist = tabpagebuflist(a:n)
    let winnr = tabpagewinnr(a:n)
    return bufname(buflist[winnr - 1])
endfunction

hi TabLineSel term=bold cterm=bold ctermfg=16 ctermbg=229
hi TabWinNumSel term=bold cterm=bold ctermfg=90 ctermbg=229
hi TabNumSel term=bold cterm=bold ctermfg=16 ctermbg=229
hi TabLine term=underline ctermfg=16 ctermbg=145
hi TabWinNum term=bold cterm=bold ctermfg=90 ctermbg=145
hi TabNum term=bold cterm=bold ctermfg=16 ctermbg=145
" 最多可以显示9个tab
set tabpagemax=9
" 需要的时候才展示
set tabline=1
set tabline=%!MyTabLine()

" quickfix窗口设置
" hi QuickFixLine ctermbg=Yellow guibg=Yellow



"""""""""""""""""""""""""""""
"""" 快捷键设置
"""""""""""""""""""""""""""""
let mapleader=","
let g:mapleader=","

" cancel <F1> HelpPage
nnoremap <F1> <Nop>

" 使用;代替:
noremap ; :

" 使用*高亮当前KeyWord, 但不执行跳转
noremap * :let @/=expand('<cword>')<CR>:set hlsearch<CR>

" 多个vim-pane之间切换 
noremap <C-h> <C-w>h
" 和tmux冲突
" noremap <C-j> <C-w>j
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l

""" 插件快捷键
" NerdTree
nnoremap <F2> :NERDTreeToggle<CR>

" buffer管理插件
nnoremap <F3> :ToggleBufExplorer<CR>
nnoremap <Leader>t :ToggleBufExplorer<CR>

" 调整窗口大小插件
nnoremap <Leader>w :WinResizerStartResize<CR>

" tab快速定位
" Alt键输出方式, insert模式下, Ctrl+v 然后 Alt+key
nnoremap 1 1gt
nnoremap 2 2gt
nnoremap 3 3gt
nnoremap 4 4gt
nnoremap 5 5gt
nnoremap 6 6gt
nnoremap 7 7gt
nnoremap 8 8gt
nnoremap 9 9gt

" <F12>唤起最近命令列表
nnoremap <F12> q:
