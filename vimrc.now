
"""""""""""""""""""""""""""""
"""" 快捷键设置
"""""""""""""""""""""""""""""
let mapleader=","
let g:mapleader=","

noremap ; :
noremap <F1> <Nop>
"""""""""""""""""""""""""""""
"""" 编码设置
"""""""""""""""""""""""""""""
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,ucs-bom,chinese,cp930,GBK


"""""""""""""""""""""""""""""
""""" 基本设置
"""""""""""""""""""""""""""""
" 命令行数
set history=4096

" 命令被全
set wildmenu

" 忽略的文件
set wildignore=*.0,*~,~.pyc

" 退格可用
set backspace=eol,start,indent 

" 以下打命令可以换行
set whichwrap+=<,>,h,l

" 搜索忽略大小写
set ignorecase

" 智能搜索 如果没有,自动上一个搜索单词
set smartcase

" 高亮搜索单词
set hlsearch

" 每插入一个字符,就高亮一个
set incsearch

" 显示匹配插号
set showmatch

" 匹配时间
set matchtime=2

" 不要警告声音
set noerrorbells

" 不要警告闪屏
set novisualbell
set t_vb=
set tm=500

" 代码折叠
" set fdm=indent

" 鼠标模式
set mouse=c

" 鼠标可以在行未后一个字符
set virtualedit=onemore

" 不要备份文件
set nobackup

" 不要临时文件
set nowb

" 不要交换文件
set noswapfile

" 用空格代替tab
set expandtab   " noexpandtab

" 智能插入tab
set smarttab

" 缩进的空格数
set shiftwidth=4

" tab的空格数
set tabstop=4

" 对于长行，自动断行
set linebreak

" 自动使用当前行的缩进为下行缩进
set autoindent

" 自动缩进
set smartindent

" 一直显示状态栏
set laststatus=2

" 命令行高度
set cmdheight=1

" 语法支持
syntax on
syntax enable


" 回到上次打开的位置
" autocmd BufEnter * if bufname("") !~ "^\[A-Za-z0-9\]*://" | lcd %:p:h | endif
autocmd BufReadPost *
            \ if line("'\"") > 0 && line("'\"") <= line("$") |
            \   exe "normal! g`\"" |
            \ endif

" tags
set cscopetag
if exists('tags')
    set tags=tags
    " set autochdir
endif


"""""""""""""""""""""""""""""
"""" 自定义方法
"""""""""""""""""""""""""""""



"""""""""""""""""""""""""""""
"""" vim-plug 插件管理器
"""""""""""""""""""""""""""""
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
" Plug 'fatih/vim-go'                     " go
" Plug 'nsf/gocode'
Plug 'davidhalter/jedi-vim'             " python补全 
Plug 'ervandew/supertab'
Plug 'vim-syntastic/syntastic'
Plug 'nvie/vim-flake8'
" Plug 'plasticboy/vim-markdown'
Plug 'marvelfans/vim-neatstatus'
" Plug 'jnurmine/Zenburn'
" Plug 'vim-scripts/vim-gitgutter'
call plug#end()


"""""""""""""""""""""""""""""
""""" 界面设置
"""""""""""""""""""""""""""""
" 高亮注释
" hi Comment cterm=italic
set number
highlight lineNr cterm=NONE ctermfg=249 ctermbg=179 guifg=LightYellow guibg=Grey
set t_Co=256
" set cursorline
" set cursorcolumn
highlight clear CursorLineNr
highlight clear LineNr
highlight clear SignColumn
set guifont=Courier:h14
" 背景颜色无法刷新的情况
if &term =~ '256color'
  set t_ut=
endif
" colorscheme zenburn

 
"""""""""""""""""""""""""""""
""""" 插件设置
"""""""""""""""""""""""""""""
"""" <Syntastic> python语法
" 超过120个字符，背景就会变成红色，对python格试很有用
autocmd Filetype python highlight OverLength ctermbg=red ctermfg=white guibg=#592929
autocmd Filetype python  match OverLength /\%121v.\+/
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_python_checkers=['pyflakes']
let g:syntastic_python_pylint_args='--max-line-length=120 --ignore=I100, I101, I201 --exclude=.git, __pycache__, build, dist'
