""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""" 插件安装与设置
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')

""""""" 基本功能插件
Plug 'ervandew/supertab'                                    " 增强Tab键
Plug 'simeji/winresizer'                                    " 快速调整一个window的大小
Plug 'preservim/nerdtree', { 'on': 'NERDTreeToggle' }       " 显示目录结构
""""""" 主题插件
Plug 'sickill/vim-monokai'
Plug 'altercation/vim-colors-solarized'
Plug 'morhetz/gruvbox'
""""""" 功能插件
Plug 'preservim/tagbar'
Plug 'fatih/vim-go'

""""""" NerdTree插件
let g:NERDTreeWinSize=35
let g:NERDTreeIgnore=['.pyc$']
autocmd bufenter * 
	\ if(winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | 
		\ q | 
	\ endif

""""""" vim-go插件
let g:go_code_completion_enabled = 1
let g:go_auto_type_info = 1
let g:go_updatetime = 500
let g:go_auto_sameids = 0       " => 影响速度
let g:go_fmt_comand = "gofmt"
let g:syntastic_go_checkers = ['golint', 'govet']
let g:syntastic_mode_map = {'mode': 'active', 'passive_filetypes': ['go']}
let g:go_list_type = "quickfix"

""""""" winresizer插件
let g:winresizer_start_key='<Leader>w'
let g:winresizer_horiz_resize=2
let g:winresizer_vert_resize=2

""""""" tagbar插件
let g:tagbar_autopreview = 0


call plug#end()
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""" 基本设置
set encoding=utf-8
set termencoding=utf-8
set fileencoding=utf-8
set fileencodings=utf-8,ucs-bom,chinese,cp930,GBK
set helplang=cn

set nocompatible                        " 设置不兼容原始vi模式
filetype on                             " 开启文件类型检测
filetype plugin on                      " 设置加载对应文件类型的插件
syntax enable                           " 开启语法高亮功能
syntax on                               " 自动语法高亮
set t_Co=256                            " 开启256色支持
if &term =~ '256color'
    set t_ut=
endif

set splitbelow 							" 分隔窗口在下边(sp等命令)
set splitright 							" 分隔窗口在右边(vs等命令)
set whichwrap+=<,>,h,l                  " 设置光标跨行
set virtualedit=block,onemore           " 光标可以出现在最后一个字符的后面
set history=32                          " 保存的命令数量
set novisualbell                        " 不要警告花屏
set mouse=a                             " 设置所有模式鼠标可用
set clipboard=unnamedplus,unnamed       " 共享粘贴板
set viminfo=<20,'10,/10,:20,h,s10       " viminfo保存数量, 过大会影响速度

set nofoldenable                        " 禁用折叠代码
filetype indent on                      " 根据不同语言, 智能缩进
" set expandtab                           " 用空格代替tab
set noexpandtab                         " 不用空格代替tab
set tabstop=4                           " tab空格数量
set shiftwidth=4                        " 缩进空格数量
set smarttab                            " 根据tabstop和softtabstop插入tab, 需要expandtab打开
set autoindent                          " 使用当前缩进, 为下行缩进
set smartindent                         " 智能缩进, 根据语言有关, 比如{,:等. 需要autoindent打开
set linebreak                           " 对于长行, 自动断行
set backspace=eol,start,indent          " 删除(退格)键可以换行删除

set wildmenu 							" 命令补全
set wildmode=longest:list
" set wildmode=list:full

set hlsearch                            " 高亮显示搜索结果
set incsearch                           " 开启实时搜索功能
set ignorecase                          " 搜索时大小写不敏感

set nobackup                            " 设置不备份
set noswapfile                          " 禁止生成临时文件
set autoread                            " 文件在vim之外修改, 自动读入
set autowrite                           " 设置自动保存
set autowriteall                        " 切换缓冲区/Tab时, 自动保存
set confirm                             " 在处理未保存文件时, 弹出确认
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""" 自定义命令设置

" 读入文件时，跳转到上次读入的位置
autocmd BufReadPost * 
	\ if line("'\"") > 1 && line("'\"") <= line("$") | execute "normal! g'\"" | endif

" 使用*/#查找时, 只高亮不跳转
nnoremap * :let @/=expand('<cword>')<CR>:set hlsearch<CR>
nnoremap # :let @/=expand('<cword>')<CR>:set hlsearch<CR>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""" 界面设置
set number
set numberwidth=4
set laststatus=2
set showmatch
set cursorline
set background=dark
" colorscheme monokai
colorscheme gruvbox
" colorscheme solarized

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""""" 自定义快捷键
let mapleader=","

nnoremap ; :

nnoremap <F1> <Nop>
nnoremap <F2> :NERDTreeToggle<CR>
nnoremap <F3> :TagbarToggle<CR>

noremap <C-h> <C-w>h
" noremap <C-j> <C-w>j                  " 和tmux快捷键冲突
noremap <C-k> <C-w>k
noremap <C-l> <C-w>l
